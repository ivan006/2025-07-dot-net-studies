WEBVTT

00:01.380 --> 00:08.070
In the last video we saw the routing and we saw how the model and views are integrated together.

00:08.520 --> 00:12.210
That being said, in the views, we have a shared folder.

00:12.480 --> 00:16.050
This shared folder is used for partial views.

00:16.380 --> 00:21.900
Partial views are similar to user components if you are coming from classic C sharp.

00:22.230 --> 00:28.740
So it is basically a view that you want to consume in multiple places in your application.

00:29.160 --> 00:33.750
Along with that, we have a special partial view which is underscored layout.

00:34.200 --> 00:39.030
Underscore layout is the default master page for your application.

00:40.640 --> 00:47.780
So in here, if we scroll back to the project that we are running, we have the header here.

00:47.930 --> 00:52.030
So the header and footer are included in underscored layout.

00:52.040 --> 00:59.810
Right here we have the header, then we have render body and we have the footer along with that in underscored

00:59.810 --> 01:06.440
layout, we have some styling and JavaScript that can be used throughout the application.

01:06.800 --> 01:12.590
So in future if you want a styling or a JavaScript functionality that you want to use throughout the

01:12.590 --> 01:16.220
application, this is the place where you will add it.

01:16.490 --> 01:21.680
Other than underscore layout, we have a partial view which is validation scripts.

01:21.710 --> 01:22.580
Partial.

01:22.850 --> 01:28.340
This partial view just has the reference to some of the jQuery for validation.

01:28.550 --> 01:30.950
We will be using this in the future.

01:30.950 --> 01:31.940
Videos.

01:32.360 --> 01:39.530
Then we have an error dot css, HTML and this is just a common error view that we have in developer

01:39.530 --> 01:40.460
mode.

01:40.460 --> 01:42.950
So that's about the shared folder views.

01:42.950 --> 01:46.280
We will be adding more partial views in future.

01:46.520 --> 01:51.910
That being said, inside the views folder, we also have two important files.

01:51.920 --> 01:54.170
First is the view imports.

01:54.260 --> 02:02.900
The purpose of view imports Cshtml file is to provide a mechanism to make directives available to razor

02:02.900 --> 02:08.150
page globally so that you don't have to add them to the pages individually.

02:08.390 --> 02:11.590
So right here it is adding the tag helpers.

02:11.600 --> 02:18.800
So with this, all the default tag helpers that ASP.Net Core team provides will be added to all of the

02:18.800 --> 02:21.410
razor pages in your application.

02:21.590 --> 02:27.200
If you do not have this, then you won't be able to use tag helpers in your project.

02:27.740 --> 02:31.970
An example of tag helpers can be seen in underscored layout.

02:32.000 --> 02:40.310
If we expand the header right here you see this tag helpers ASP area ASP controller ASP action.

02:40.340 --> 02:47.670
These are all the tag helpers that make the binding look like HTML language, but it does the binding

02:47.670 --> 02:56.250
with your C-sharp code tag helpers is an idea that Microsoft team has adopted from other languages after

02:56.250 --> 03:00.180
looking at the success like Angular and React.

03:00.660 --> 03:07.890
So if in future, if you add more custom tag helpers, you can register them here and they will be available

03:07.890 --> 03:10.260
for use throughout the application.

03:11.130 --> 03:15.330
That being said, we'll go to the next file, which is Vue Start.

03:15.930 --> 03:22.050
The main purpose of Vue start is to set values that all the other views will have to use.

03:22.380 --> 03:29.100
If this view exists and it is under the views folder, it enables us to set the property that applies

03:29.100 --> 03:32.190
to all the views in the system right here.

03:33.240 --> 03:37.440
A most common underscored layout view will set some properties.

03:37.440 --> 03:41.250
The default one in MVC is the layout page.

03:41.430 --> 03:48.090
However, you can also do complex thing in Vue start, for example, you can say that for a specific

03:48.090 --> 03:54.540
controller you want to change the layout page, you can add if condition, check the controller name

03:54.540 --> 03:59.270
and do complex logic, but we'll just leave it simple for now.

03:59.280 --> 04:06.330
So here we are defining the default master page for the application is underscored layout right here.

04:06.600 --> 04:12.990
So if you change this, your master page could be changed using the layout property in Vue start.

04:13.230 --> 04:19.170
Also, what you can do is you can add a view, start inside the folder as well and then that file will

04:19.170 --> 04:20.430
take precedence.

04:20.640 --> 04:26.670
So with that, I believe we have covered all the files that we have when the project was created.

04:26.910 --> 04:34.110
Now this has been a lengthy section and it was mostly theoretical with very little exposure to routing

04:34.110 --> 04:35.430
and the project.

04:35.700 --> 04:38.640
But this won't be the same moving forward.

04:38.760 --> 04:46.080
Moving forward, everything will be hands on and we will be coding everything and exploring ASP.Net

04:46.080 --> 04:47.580
Core in detail.

04:48.000 --> 04:52.770
So that being said, let's get started with everything from the next video.
